name: Deploy to ECR and ECS

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.11'

      - name: Install dependencies
        run: npm install

      - name: Build Docker image
        run: |
          TIMESTAMP=$(date +%Y%m%d-%H%M)
          docker build -t clinicfiapproject .
          docker tag clinicfiapproject:latest public.ecr.aws/e9h5j2l3/clinicfiapproject:${{ env.TIMESTAMP }}

      - name: Get current timestamp
        id: timestamp
        run: echo "TIMESTAMP=$(date +%Y%m%d-%H%M)" >> $GITHUB_ENV

      - name: Log in to Amazon ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/e9h5j2l3

      - name: Push image to Amazon ECR
        run: |
          docker push public.ecr.aws/e9h5j2l3/clinicfiapproject:${{ env.TIMESTAMP }}

      - name: Update ECS Task Definition
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-2
          CLUSTER_NAME: clinicfiapproject
          SERVICE_NAME: clinicfiapproject-service
          TASK_DEFINITION_NAME: clinicfiapproject-task
          CONTAINER_NAME: clinicfiapproject
        run: |
          aws ecs describe-task-definition --task-definition $TASK_DEFINITION_NAME --region $AWS_REGION > task-def.json

          jq --arg IMAGE "public.ecr.aws/e9h5j2l3/clinicfiapproject:${{ env.TIMESTAMP }}" '.taskDefinition.containerDefinitions[0].image = $IMAGE' task-def.json > task-def-updated.json

          aws ecs register-task-definition \
            --family $TASK_DEFINITION_NAME \
            --execution-role-arn $(jq -r '.taskDefinition.executionRoleArn' task-def-updated.json) \
            --network-mode $(jq -r '.taskDefinition.networkMode' task-def-updated.json) \
            --container-definitions file://task-def-updated.json \
            --requires-compatibilities "FARGATE" \
            --cpu $(jq -r '.taskDefinition.cpu' task-def-updated.json) \
            --memory $(jq -r '.taskDefinition.memory' task-def-updated.json) \
            --region $AWS_REGION

          NEW_TASK_DEFINITION_ARN=$(aws ecs describe-task-definition --task-definition $TASK_DEFINITION_NAME --region $AWS_REGION | jq -r '.taskDefinition.taskDefinitionArn')

          aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --task-definition $NEW_TASK_DEFINITION_ARN --force-new-deployment --region $AWS_REGION