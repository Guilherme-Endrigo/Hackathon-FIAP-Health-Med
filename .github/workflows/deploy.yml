name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.LIGHTSAIL_SSH_KEY }}

      - name: Copy files to Lightsail
        run: |
          scp -o StrictHostKeyChecking=no -r ./ ${{ secrets.LIGHTSAIL_IP }}:/home/ubuntu/clinic_fiap_project

      - name: Create .env file on Lightsail
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.LIGHTSAIL_IP }} << 'EOF'
          cd /home/ubuntu/clinic_fiap_project
          echo "NODE_ENV=${{ secrets.NODE_ENV }}" > .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASS=${{ secrets.DB_PASS }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PASS }}" >> .env
          echo "DB_DATABASE=${{ secrets.DB_PASS }}" >> .env
          echo "JWT_SECRET=${{ secrets.DB_PASS }}" >> .env
          EOF

      - name: Install dependencies on Lightsail
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.LIGHTSAIL_IP }} << 'EOF'
          cd /home/ubuntu/clinic_fiap_project
          npm install
          npm run build
          EOF

      - name: Restart application on Lightsail
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.LIGHTSAIL_IP }} << 'EOF'
          pm2 stop all || true
          pm2 start dist/main.js --name clinic_fiap_project
          EOF
